
package org.tempuri;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import ch.admin.uid.xmlns.uid_wse.ArrayOfOrganisationType;
import ch.admin.uid.xmlns.uid_wse._5.UidEntityPublicSearchRequest;
import ch.admin.uid.xmlns.uid_wse._5.UidEntitySearchResponse;
import ch.admin.uid.xmlns.uid_wse_shared._2.SearchConfiguration;
import ch.ech.xmlns.ech_0097._5.UidStructureType;
import ch.ech.xmlns.ech_0108._5.OrganisationType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IPublicServices", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
@XmlSeeAlso({
    ch.ech.xmlns.ech_0108._5.ObjectFactory.class,
    ch.admin.uid.xmlns.uid_wse.ObjectFactory.class,
    ch.admin.uid.xmlns.uid_wse._5.ObjectFactory.class,
    ch.admin.uid.xmlns.uid_wse_shared._2.ObjectFactory.class,
    ch.ech.xmlns.ech_0010._7.ObjectFactory.class,
    ch.ech.xmlns.ech_0044._4.ObjectFactory.class,
    ch.ech.xmlns.ech_0046._5.ObjectFactory.class,
    ch.ech.xmlns.ech_0097._5.ObjectFactory.class,
    ch.ech.xmlns.ech_0098._5.ObjectFactory.class,
    ch.ech.xmlns.ech_0116._4.ObjectFactory.class,
    ch.ech.xmlns.ech_0007._6.ObjectFactory.class
})
public interface IPublicServices {


    /**
     * <summary>
     *             Returns a data sample to demonstrate the structure of eCH-0108:organisationType. The sample contains all mapped fields. All data is fictional. 
     *             </summary>
     *             <returns>Data sample</returns>
     * 
     * @return
     *     returns ch.ech.xmlns.ech_0108._5.OrganisationType
     * @throws IPublicServicesGetOrganisationSampleSecurityFaultFaultFaultMessage
     * @throws IPublicServicesGetOrganisationSampleBusinessFaultFaultFaultMessage
     * @throws IPublicServicesGetOrganisationSampleInfrastructureFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetOrganisationSample", action = "http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/GetOrganisationSample")
    @WebResult(name = "GetOrganisationSampleResult", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
    @RequestWrapper(localName = "GetOrganisationSample", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.GetOrganisationSample")
    @ResponseWrapper(localName = "GetOrganisationSampleResponse", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.GetOrganisationSampleResponse")
    public OrganisationType getOrganisationSample()
        throws IPublicServicesGetOrganisationSampleBusinessFaultFaultFaultMessage, IPublicServicesGetOrganisationSampleInfrastructureFaultFaultFaultMessage, IPublicServicesGetOrganisationSampleSecurityFaultFaultFaultMessage
    ;

    /**
     * <summary>
     *             Get the core data (Kernmerkmale) of a UID entity by its UID 
     *             </summary>
     *             <param name="uid">UID of requested UID entity</param>
     *             <returns>The requested UID entity</returns>
     * 
     * @param uid
     * @return
     *     returns ch.admin.uid.xmlns.uid_wse.ArrayOfOrganisationType
     * @throws IPublicServicesGetByUIDBusinessFaultFaultFaultMessage
     * @throws IPublicServicesGetByUIDInfrastructureFaultFaultFaultMessage
     * @throws IPublicServicesGetByUIDSecurityFaultFaultFaultMessage
     */
    @WebMethod(operationName = "GetByUID", action = "http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/GetByUID")
    @WebResult(name = "GetByUIDResult", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
    @RequestWrapper(localName = "GetByUID", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.GetByUID")
    @ResponseWrapper(localName = "GetByUIDResponse", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.GetByUIDResponse")
    public ArrayOfOrganisationType getByUID(
        @WebParam(name = "uid", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
        UidStructureType uid)
        throws IPublicServicesGetByUIDBusinessFaultFaultFaultMessage, IPublicServicesGetByUIDInfrastructureFaultFaultFaultMessage, IPublicServicesGetByUIDSecurityFaultFaultFaultMessage
    ;

    /**
     * <summary>
     *             Search for UID-Einheiten 
     *             </summary>
     *             <param name="searchParameters">Search parameters formated as eCH-0108-3-0f document</param>
     *             <param name="config">Configuration parameters to customize search behaviour</param>
     *             <returns>XML-Document of type uid-wse</returns>
     * 
     * @param searchParameters
     * @param config
     * @return
     *     returns ch.admin.uid.xmlns.uid_wse._5.UidEntitySearchResponse
     * @throws IPublicServicesSearchBusinessFaultFaultFaultMessage
     * @throws IPublicServicesSearchInfrastructureFaultFaultFaultMessage
     * @throws IPublicServicesSearchSecurityFaultFaultFaultMessage
     */
    @WebMethod(operationName = "Search", action = "http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/Search")
    @WebResult(name = "SearchResult", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
    @RequestWrapper(localName = "Search", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.Search")
    @ResponseWrapper(localName = "SearchResponse", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.SearchResponse")
    public UidEntitySearchResponse search(
        @WebParam(name = "searchParameters", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
        UidEntityPublicSearchRequest searchParameters,
        @WebParam(name = "config", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
        SearchConfiguration config)
        throws IPublicServicesSearchBusinessFaultFaultFaultMessage, IPublicServicesSearchInfrastructureFaultFaultFaultMessage, IPublicServicesSearchSecurityFaultFaultFaultMessage
    ;

    /**
     * <summary>
     *             Validate a VatNumber 
     *             </summary>
     *             <param name="vatNumber">VAT number to validate</param>
     *             <returns>true if exists</returns>
     * 
     * @param vatNumber
     * @return
     *     returns boolean
     * @throws IPublicServicesValidateVatNumberBusinessFaultFaultFaultMessage
     * @throws IPublicServicesValidateVatNumberSecurityFaultFaultFaultMessage
     * @throws IPublicServicesValidateVatNumberInfrastructureFaultFaultFaultMessage
     */
    @WebMethod(operationName = "ValidateVatNumber", action = "http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/ValidateVatNumber")
    @WebResult(name = "ValidateVatNumberResult", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
    @RequestWrapper(localName = "ValidateVatNumber", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.ValidateVatNumber")
    @ResponseWrapper(localName = "ValidateVatNumberResponse", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.ValidateVatNumberResponse")
    public boolean validateVatNumber(
        @WebParam(name = "vatNumber", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
        String vatNumber)
        throws IPublicServicesValidateVatNumberBusinessFaultFaultFaultMessage, IPublicServicesValidateVatNumberInfrastructureFaultFaultFaultMessage, IPublicServicesValidateVatNumberSecurityFaultFaultFaultMessage
    ;

    /**
     * <summary>
     *             Validate a UID 
     *             </summary>
     *             <param name="uid">UID to validate. Accepted format: 'CHE123456789' or 'CHE-123.456.789'</param>
     *             <returns>true if the UID exists in the UID register</returns>
     * 
     * @param uid
     * @return
     *     returns boolean
     * @throws IPublicServicesValidateUIDInfrastructureFaultFaultFaultMessage
     * @throws IPublicServicesValidateUIDBusinessFaultFaultFaultMessage
     * @throws IPublicServicesValidateUIDSecurityFaultFaultFaultMessage
     */
    @WebMethod(operationName = "ValidateUID", action = "http://www.uid.admin.ch/xmlns/uid-wse/IPublicServices/ValidateUID")
    @WebResult(name = "ValidateUIDResult", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
    @RequestWrapper(localName = "ValidateUID", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.ValidateUID")
    @ResponseWrapper(localName = "ValidateUIDResponse", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse", className = "ch.admin.uid.xmlns.uid_wse.ValidateUIDResponse")
    public boolean validateUID(
        @WebParam(name = "uid", targetNamespace = "http://www.uid.admin.ch/xmlns/uid-wse")
        String uid)
        throws IPublicServicesValidateUIDBusinessFaultFaultFaultMessage, IPublicServicesValidateUIDInfrastructureFaultFaultFaultMessage, IPublicServicesValidateUIDSecurityFaultFaultFaultMessage
    ;

}
